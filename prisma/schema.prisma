// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleType {
  ADMIN
  BUSINESS_USER
  END_USER
}

enum LotteryType {
  UTUSH_GOZLE
  AKSIYA
}

enum LotteryStatus {
  ACTIVE
  INACTIVE
  RUNNING_LOW
}

enum PrizeType {
  LUX
  MEDIUM
  REGULAR
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  hash        String
  firstName   String?
  lastName    String?
  phonenumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  Lottery Lottery[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      RoleType @default(END_USER)
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Role_Permissions {
  id           Int @id @default(autoincrement())
  permissionId Int
  roleId       Int
}

model User_Favourites {
  id        Int @id @default(autoincrement())
  userId    Int
  lotteryId Int
}

model Lottery {
  id          Int            @id @default(autoincrement())
  name        String
  bannerImage String
  description String
  type        LotteryType
  status      LotteryStatus? @default(INACTIVE)
  from        DateTime?
  to          DateTime?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  authorId Int
  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade)


  ////////////////////////UtushGozle/////////////////////////////////////////////////////
  coinTotalCount   Int
  coinSpecialCount Int
  ////////////////////////UtushGozle/////////////////////////////////////////////////////

}

model Coin {
  id               Int      @id @default(autoincrement())
  randomizedNumber String
  hasPrize         Boolean
  isUsed           Boolean
  text             String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Prize {
  id         Int       @id @default(autoincrement())
  prizeCount Int
  prizeName  String
  prizeType  PrizeType @default(REGULAR)
}

model Prize_Coins {
  id      Int @id @default(autoincrement())
  prizeId Int
  coinId  Int
}

model Lottery_Coins {
  id        Int @id @default(autoincrement())
  lotteryId Int
  coinId    Int
}

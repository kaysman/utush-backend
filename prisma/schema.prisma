// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  BUSINESS_USER
  END_USER
}

enum LotteryType {
  UTUSH_GOZLE
  AKSIYA
}

enum LotteryStatus {
  ACTIVE
  INACTIVE
  RUNNING_LOW
}

enum PrizeType {
  LUX
  MEDIUM
  REGULAR
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  hash        String
  role        Role
  firstName   String?
  lastName    String?
  phonenumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  favourites Favourite[]
  lotteries  Lottery[]

}

model Lottery {
  id          Int           @id @default(autoincrement())
  name        String
  bannerImage String
  description String
  type        LotteryType
  status      LotteryStatus? @default(INACTIVE)
  from        DateTime?
  to          DateTime?

  favourite Favourite?

  authorId Int
  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade)    

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model UtushGozle {
  id        Int     @id @default(autoincrement())
  coinTotalCount Int
  coinSpecialCount Int
  coins     Coin[]

  lotteryId Int @unique
}

model Aksiya {
  id        Int     @id @default(autoincrement())
  lotteryId Int     @unique
}

model Coin {
  id               Int      @id @default(autoincrement())
  randomizedNumber String
  hasPrize         Boolean
  prizeType        PrizeType?
  isUsed           Boolean 
  text             String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  utushGozleId Int
  utushGozle   UtushGozle @relation(fields: [utushGozleId], references: [id], onDelete: Cascade)
}

model Favourite {
  id Int @id @default(autoincrement())

  // user data
  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // lottery data
  lotteryId Int     @unique
  lottery   Lottery @relation(fields: [lotteryId], references: [id], onDelete: Cascade)
}

model Prize {
  id Int @id @default(autoincrement())
  prizeCount Int
  prizeName String
  prizeType PrizeType @default(REGULAR)
}